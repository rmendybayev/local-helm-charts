# This is a simple example of using a config map to create a single page static site.
apiVersion: v1
kind: ConfigMap
metadata:
  namespace: {{ .Values.namespace }}
  name: {{ template "filebeat.releasename" . }}
  labels:
    heritage: {{ .Release.Service }}
    release: "{{ .Release.Name }}"
    chart: {{ .Chart.Name }}-{{ .Chart.Version }}
    app: {{ template "filebeat.name" . }}
data:
  filebeat.yml: |-
    logging.level: debug
    filebeat.config: 
      inputs:
        # Mounted `filebeat-inputs` configmap:
        path: ${path.config}/inputs.d/*.yml
        # Reload inputs configs as they change:
        reload.enabled: false
        enable: true
      modules:
        path: ${path.config}/modules.d/*.yml
        # Reload module configs as they change:
        reload.enabled: true
        enable: true
    processors:
      - add_cloud_metadata:

    #output.kafka:
    #  hosts: ["fc8kafka-brokerq00.aa-dev-us-aws.gfoundries.com:9092", "fc8kafka-brokerq01.aa-dev-us-aws.gfoundries.com:9092", "fc8kafka-brokerq02.aa-dev-us-aws.gfoundries.com:9092"]
    #  topic: '{{ .Values.topic }}'
    #  required_acks: 1
    #  partition.hash:
    #    hash: [source]
    output.file:
      path: "/var/filebeat"
      filename: filebeat
  nginx.yml: |-
    - module: nginx
      access:
        enabled: true
        var.paths: ["/{{ .Release.Name }}/nginx/access.log*"]
      error:
        enabled: true
        var.paths: ["/{{ .Release.Name }}/nginx/error.log*"]